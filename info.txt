function get-cpuUsage {
  param([switch]$showProcess)
  $usage=[math]::Round((Get-Counter '\Processor(_Total)\% Processor Time').CounterSamples.CookedValue,2)
  $mem = Get-CimInstance Win32_OperatingSystem
$memory = [math]::Round((($mem.TotalVisibleMemorySize - $mem.FreePhysicalMemory) / $mem.TotalVisibleMemorySize) * 100, 2)
  Write-Host "======================================================="
  Write-Host "          -       Cumputer Usage         -"
  Write-Host "======================================================="
  Write-Host "CPU: $usage%"
  Write-Host "Memory: $memory%"
  if($showProcess){
    Get-CimInstance Win32_Process | 
    Select-Object Name, @{Name="MemoryUsageMB"; Expression={[math]::Round($_.WorkingSetSize / 1MB, 2)}} |
    Sort-Object MemoryUsageMB -Descending | Select-Object -First 15 Name, MemoryUsageMB
  }
}


function rmProc {
	param([string]$name)
	if(-not $name){
		Write-Host "[?] Usage:`n`t>> rmProc [process name]"
		return
	}
	if($name.Contains('.')){
		$name = $name.split('.')[0]
	}
	try {
		kill -processName $name
		Write-Host "[+] The process `"$name`" was removed."
	}
	catch {
		Write-Host "[!] Error: $name is still running ..."
	}
}
